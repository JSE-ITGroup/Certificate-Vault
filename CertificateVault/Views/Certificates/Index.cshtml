@using PagedList;
@using PagedList.Mvc;

@model IPagedList<CertificateVault.Models.ADOModels.Certificate>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().MemberID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Volume)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CreatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CreatedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ApprovedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ApprovedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().WithdrawRequestAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().WithdrawRequestBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().WithdrawApprovedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().WithdrawApprovedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().UpdatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Client)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ClientId)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.Vault.Name)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.MemberID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Volume)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedAt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ApprovedAt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ApprovedBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WithdrawRequestAt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WithdrawRequestBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WithdrawApprovedAt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WithdrawApprovedBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UpdatedAt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Client)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClientId)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.Vault.Name)
        </td>*@
        <td>
            @Html.ActionLink("Edit", "Edit", new {  id=item.CertificateNumber,id2 = item.MemberID, id3 = item.SymbolIsin }) |
            @Html.ActionLink("Details", "Details", new { id = item.CertificateNumber, id2 = item.MemberID, id3 = item.SymbolIsin }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.CertificateNumber, id2 = item.MemberID, id3 = item.SymbolIsin })
        </td>
    </tr>
}

</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchnBy = Request.QueryString["SearchBy"],search = Request.QueryString["search"]}))
