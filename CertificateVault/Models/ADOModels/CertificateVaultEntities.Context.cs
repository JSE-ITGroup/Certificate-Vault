//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CertificateVault.Models.ADOModels
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CertificateVaultEntities : DbContext
    {
        public CertificateVaultEntities()
            : base("name=CertificateVaultEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Certificate> Certificates { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Vault> Vaults { get; set; }
        public virtual DbSet<Status> Status { get; set; }
    
        public virtual ObjectResult<usp_GetReport_Result> usp_GetReport(string certificateNumber, string symbolIsin, string clientName, string vaultName, string status)
        {
            var certificateNumberParameter = certificateNumber != null ?
                new ObjectParameter("CertificateNumber", certificateNumber) :
                new ObjectParameter("CertificateNumber", typeof(string));
    
            var symbolIsinParameter = symbolIsin != null ?
                new ObjectParameter("SymbolIsin", symbolIsin) :
                new ObjectParameter("SymbolIsin", typeof(string));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var vaultNameParameter = vaultName != null ?
                new ObjectParameter("VaultName", vaultName) :
                new ObjectParameter("VaultName", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetReport_Result>("usp_GetReport", certificateNumberParameter, symbolIsinParameter, clientNameParameter, vaultNameParameter, statusParameter);
        }
    
        public virtual ObjectResult<usp_GetSymbols_Result> usp_GetSymbols()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSymbols_Result>("usp_GetSymbols");
        }
    
        public virtual ObjectResult<usp_GetDepoPartId_Result> usp_GetDepoPartId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDepoPartId_Result>("usp_GetDepoPartId");
        }
    }
}
